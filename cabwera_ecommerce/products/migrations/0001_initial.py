# Generated by Django 5.2 on 2025-04-22 05:10

import django.core.validators
import django.db.models.deletion
import tinymce.models
import versatileimagefield.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, help_text=' The recommended size is 120x120 pixels.', null=True, upload_to='categories/', verbose_name='category')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Unpublished', 'Unpublished')], default='Published', max_length=20)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, help_text=' The recommended size is 780x300 pixels.', null=True, upload_to='Offers/')),
                ('offer', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='slider/')),
                ('sub_head', models.CharField(max_length=400)),
                ('content', models.TextField()),
            ],
            options={
                'verbose_name': 'Slider',
                'verbose_name_plural': 'Sliders',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('background_color', models.CharField(choices=[('danger', 'red'), ('success', 'Green'), ('info', 'Blue'), ('warning', 'Yellow')], default='success', max_length=10)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('product_code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('sku', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('details', tinymce.models.HTMLField(blank=True, null=True)),
                ('rating', models.PositiveIntegerField(default=5, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Product Rating(max:5)')),
                ('image', models.ImageField(help_text=' The recommended size is 220x220 pixels.', upload_to='products/')),
                ('generic_name', models.CharField(blank=True, max_length=200, null=True)),
                ('first_available_date', models.DateField(blank=True, null=True)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_new_arrival', models.BooleanField(default=True)),
                ('is_best_seller', models.BooleanField(default=True)),
                ('is_offer', models.BooleanField(default=False)),
                ('is_stock', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True, max_length=500)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='products.category')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='products.tag')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OfferProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.offer', verbose_name='Offer Products')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Product')),
            ],
        ),
        migrations.CreateModel(
            name='AvailableSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('unit', models.CharField(choices=[('kg', 'Kilogram'), ('pc', 'Piece'), ('g', 'Gram'), ('ltr', 'Liter'), ('ml', 'Milliliter'), ('m', 'Meter'), ('cm', 'Centimeter')], max_length=10)),
                ('sale_price', models.FloatField()),
                ('regular_price', models.FloatField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('is_stock', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'verbose_name': 'Available Size',
                'verbose_name_plural': 'Available Sizes',
                'ordering': ('sale_price',),
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text=' The recommended size is 800x600 pixels.', upload_to='products/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ('product',),
            },
        ),
        migrations.CreateModel(
            name='ProductInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Product Information')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ImageField(upload_to='profile_images')),
                ('headline', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approval', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
